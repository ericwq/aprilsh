# Contributor: Wang Qi <ericwq057@qq.com>
# Maintainer: Wang Qi <ericwq057@qq.com>
pkgname=aprilsh
pkgver=0.6.3
pkgrel=0
pkgdesc="Remote shell support intermittent or mobile network"
url="https://github.com/ericwq/aprilsh"
arch="all"
license="MIT"
depends="$pkgname-client $pkgname-server"
makedepends="go protoc utmps-dev"
subpackages="$pkgname-client $pkgname-server $pkgname-openrc"
source="https://github.com/ericwq/aprilsh/releases/download/$pkgver/aprilsh-$pkgver.tar.gz
		  apshd.initd"
# builddir="$srcdir"/$pkgname-$pkgver

_git_tag=0.6.3
_git_commit=a1c13daac7987fbffa926772c97ff00a9ca3a67f
_git_branch=HEAD

export PATH=$PATH:~/go/bin
export GOCACHE="${GOCACHE:-"$srcdir/go-cache"}"
export GOTMPDIR="${GOTMPDIR:-"$srcdir"}"
export GOMODCACHE="${GOMODCACHE:-"$srcdir/go"}"

prepare() {
	printf "startdir=$startdir\n"
	printf "srcdir  =$srcdir\n"
	printf "builddir=$builddir\n"
	printf "pkgdir  =$pkgdir\n"
	# printf "PATH=$PATH\n"
	default_prepare
}

build() {
	# install go protocol buffers plugin
	go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
	# install depends go module
	go mod tidy
	# use the following command to generate protocol buffer code
	protoc --go_out=. -I . ./protobufs/transportInstruction.proto
	protoc --go_out=. -I . ./protobufs/hostInput.proto
	protoc --go_out=. -I . ./protobufs/userInput.proto

	# prepare build info
   _module_name=$(head ./go.mod | grep "^module" | awk '{print $2}')
   _build_time=$(TZ='Asia/Shanghai' date "+%F %T")
   _go_version=$(go version | grep "version" | awk '{print $3,$4}')

   echo "build server start: $(TZ='Asia/Shanghai' date '+%F %T')"
   go build -ldflags="-s -w
      -X '$_module_name/frontend.GitTag=${_git_tag}'
      -X '$_module_name/frontend.GoVersion=${_go_version}'
      -X '$_module_name/frontend.GitCommit=${_git_commit}'
      -X '$_module_name/frontend.GitBranch=${_git_branch}'
      -X '$_module_name/frontend.BuildTime=${_build_time}'" -o "$builddir/bin/apshd" ./frontend/server/*.go
   echo "build server end  : $(TZ='Asia/Shanghai' date '+%F %T')"
   echo "output server to  : $builddir/bin/apshd"

   echo "build client start: $(TZ='Asia/Shanghai' date '+%F %T')"
   go build -ldflags="-s -w
      -X '$_module_name/frontend.GitTag=${_git_tag}'
      -X '$_module_name/frontend.GoVersion=${_go_version}'
      -X '$_module_name/frontend.GitCommit=${_git_commit}'
      -X '$_module_name/frontend.GitBranch=${_git_branch}'
      -X '$_module_name/frontend.BuildTime=${_build_time}'" -o "$builddir/bin/apsh" ./frontend/client/*.go
   echo "build client end  : $(TZ='Asia/Shanghai' date '+%F %T')"
   echo "output client to  : $builddir/bin/apsh"
}

check() {
	go test ./encrypt/...
	# go test ./frontend/...
	go test ./network/...
	go test ./statesync/...
	# go test ./terminal/...
	# go test ./util/...
}

package() {
	install -Dm755 "$builddir/bin/apshd" "$pkgdir/usr/bin/apshd"
	install -Dm755 "$builddir/bin/apsh"  "$pkgdir/usr/bin/apsh"
	install -Dm755 "$srcdir/apshd.initd" "$pkgdir/etc/init.d/apshd"
}

client() {
	#Allow this package to be installed at the same time as the listed packages, even if they have conflicting files.
	replaces="$pkgname"
	pkgdesc="$pkgname client"
	depends="musl-locales"
	mkdir -p "$subpkgdir/usr/bin"
	mv "$pkgdir/usr/bin/apsh" "$subpkgdir/usr/bin/"
}

server() {
	replaces="$pkgname"
	pkgdesc="$pkgname server"
	depends="musl-locales utmps ncurses-terminfo wezterm-extra-terminfo openssh-server"
	mkdir -p "$subpkgdir/usr/bin"
	mv "$pkgdir/usr/bin/apshd" "$subpkgdir/usr/bin/"
}

sha512sums="
3c9125dac2b6df3fe0102280179876cf694eacadf19bcc66c373cc72ca35a99e8df8162427f63087416e4060d49f7bd2b60ab0a82ff7b05c43329327a6a2b0c9  aprilsh-0.6.1.tar.gz
d439a571851b17a8004ccc6dc46c10ba4a1bbef9c51d782bc46640f2aa5fb0c81528446a596efd13c719e80a33f43230c6ff2587296e354ef5656407bacdd567  apshd.initd
"
