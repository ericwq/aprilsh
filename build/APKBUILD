# Contributor: Wang Qi <ericwq057@qq.com>
# Maintainer: Wang Qi <ericwq057@qq.com>
pkgname=aprilsh
pkgver=0.6.13
pkgrel=0
pkgdesc="Remote shell support intermittent or mobile network"
url="https://github.com/ericwq/aprilsh"
arch="all"
license="MIT"
depends="$pkgname-client $pkgname-server"
makedepends="go protoc utmps-dev ncurses ncurses-terminfo musl-locales"
subpackages="$pkgname-client $pkgname-server $pkgname-openrc"
source="https://github.com/ericwq/aprilsh/releases/download/$pkgver/aprilsh-$pkgver.tar.gz
		  apshd.initd"
# builddir="$srcdir"/$pkgname-$pkgver

_git_tag=0.6.13
_git_commit=23d2f9551c4a23c7dc055b329b44765f4bbdd6fa
_git_branch=HEAD

export PATH=$PATH:~/go/bin
export GOCACHE="${GOCACHE:-"$srcdir/go-cache"}"
export GOTMPDIR="${GOTMPDIR:-"$srcdir"}"
export GOMODCACHE="${GOMODCACHE:-"$srcdir/go"}"

prepare() {
	printf "startdir=$startdir\n"
	printf "srcdir  =$srcdir\n"
	printf "builddir=$builddir\n"
	printf "pkgdir  =$pkgdir\n"
	# printf "PATH=$PATH\n"
	default_prepare
}

build() {
	# install go protocol buffers plugin
	go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
	# install depends go module
	go mod tidy
	# use the following command to generate protocol buffer code
	protoc --go_out=. -I . ./protobufs/transportInstruction.proto
	protoc --go_out=. -I . ./protobufs/hostInput.proto
	protoc --go_out=. -I . ./protobufs/userInput.proto

	# prepare build info
   _module_name=$(head ./go.mod | grep "^module" | awk '{print $2}')
   _build_time=$(TZ='Asia/Shanghai' date "+%F %T")
   _go_version=$(go version | grep "version" | awk '{print $3,$4}')

   echo "build server start: $(TZ='Asia/Shanghai' date '+%F %T')"
   go build -ldflags="-s -w
      -X '$_module_name/frontend.GitTag=${_git_tag}'
      -X '$_module_name/frontend.GoVersion=${_go_version}'
      -X '$_module_name/frontend.GitCommit=${_git_commit}'
      -X '$_module_name/frontend.GitBranch=${_git_branch}'
      -X '$_module_name/frontend.BuildTime=${_build_time}'" -o "$builddir/bin/apshd" ./frontend/server/*.go
   echo "build server end  : $(TZ='Asia/Shanghai' date '+%F %T')"
   echo "output server to  : $builddir/bin/apshd"

   echo "build client start: $(TZ='Asia/Shanghai' date '+%F %T')"
   go build -ldflags="-s -w
      -X '$_module_name/frontend.GitTag=${_git_tag}'
      -X '$_module_name/frontend.GoVersion=${_go_version}'
      -X '$_module_name/frontend.GitCommit=${_git_commit}'
      -X '$_module_name/frontend.GitBranch=${_git_branch}'
      -X '$_module_name/frontend.BuildTime=${_build_time}'" -o "$builddir/bin/apsh" ./frontend/client/*.go
   echo "build client end  : $(TZ='Asia/Shanghai' date '+%F %T')"
   echo "output client to  : $builddir/bin/apsh"
}

check() {
	go test ./encrypt/...
	go test ./frontend/
	APRILSH_APSHD_PATH="$builddir/bin/apshd" go test ./frontend/server
	go test ./frontend/client
	go test ./network/...
	go test ./statesync/...
	go test ./terminal/...
	go test ./util/...
}

package() {
	install -Dm755 "$builddir/bin/apshd" "$pkgdir/usr/bin/apshd"
	install -Dm755 "$builddir/bin/apsh"  "$pkgdir/usr/bin/apsh"
	install -Dm755 "$srcdir/apshd.initd" "$pkgdir/etc/init.d/apshd"
}

client() {
	#Allow this package to be installed at the same time as the listed packages, even if they have conflicting files.
	replaces="$pkgname"
	pkgdesc="$pkgname client"
	depends="musl-locales ncurses ncurses-terminfo"
	mkdir -p "$subpkgdir/usr/bin"
	mv "$pkgdir/usr/bin/apsh" "$subpkgdir/usr/bin/"
}

server() {
	replaces="$pkgname"
	pkgdesc="$pkgname server"
	depends="musl-locales utmps ncurses ncurses-terminfo wezterm-extra-terminfo openssh-server"
	mkdir -p "$subpkgdir/usr/bin"
	mv "$pkgdir/usr/bin/apshd" "$subpkgdir/usr/bin/"
}

sha512sums="
1def79257c25f6da96709404ab85e67d225fa179d5027abd8eb04f0598c38699514ff9ffd15164d7a50b7c5bb84e1272b267d9af3ca37be2629224dd3b2e5bf2  aprilsh-0.6.5.tar.gz
ad32f77544e44a5e026371f532659ae3c83a4efc2460e8b5fc3a842ac535abfc687a477e121354d11c5deafcd14727fea69b3b9d333ff6eb765988e3caf3181d  apshd.initd
"
