# Contributor: Wang Qi <ericwq057@qq.com>
# Maintainer: Wang Qi <ericwq057@qq.com>
pkgname=aprilsh
pkgver=0.6.40
pkgrel=0
pkgdesc="Remote shell support intermittent or mobile network"
url="https://github.com/ericwq/aprilsh"
arch="all"
license="MIT"
depends="$pkgname-client $pkgname-server"
makedepends="go protoc utmps-dev ncurses ncurses-terminfo musl-locales protoc-gen-go"
subpackages="$pkgname-client $pkgname-server $pkgname-openrc"
source="https://github.com/ericwq/aprilsh/releases/download/$pkgver/aprilsh-$pkgver.tar.gz
	apshd.logrotate
	apshd.initd"

# build info (part 1) required by go build
_git_tag=0.6.40
_git_commit=6e1115c
_git_branch=HEAD

# go build need this
export PATH=$PATH:~/go/bin
export GOCACHE="${GOCACHE:-"$srcdir/go-cache"}"
export GOTMPDIR="${GOTMPDIR:-"$srcdir"}"
export GOMODCACHE="${GOMODCACHE:-"$srcdir/go"}"

build() {
	# generate protocol buffer code
	protoc --go_out=. -I . ./protobufs/transportInstruction.proto
	protoc --go_out=. -I . ./protobufs/hostInput.proto
	protoc --go_out=. -I . ./protobufs/userInput.proto

	# prepare build info (part 2)
	_module_name=$(head ./go.mod | grep '^module' | awk '{print $2}')
	_go_version=$(go version | grep 'version' | awk '{print $3}')

	# set build tags based on glibc or musl
	_musl=$(ldd /bin/ls | grep 'musl'|head -n 1| awk '{print $1}')
	if [ "$_musl" == "" ]
	then
		_build_tag="-tags utmp"
	else
		_build_tag="-tags utmps"
	fi

	# set ldflags
	local ldflags="-s -w \
		-X $_module_name/frontend.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%S) \
		-X $_module_name/frontend.GitBranch=$_git_branch \
		-X $_module_name/frontend.GitCommit=$_git_commit \
		-X $_module_name/frontend.GitTag=$_git_tag \
		-X $_module_name/frontend.GoVersion=$_go_version \
		"
	echo "build server start: $(date)"
	go build $_build_tag -ldflags="$ldflags" -o "$builddir/bin/apshd" ./frontend/server
	echo "build server end  : $(date)"
	echo "output server to  : $builddir/bin/apshd"


	# set ldflags (required for update BuildTime)
	local ldflags="-s -w \
		-X $_module_name/frontend.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%S) \
		-X $_module_name/frontend.GitBranch=$_git_branch \
		-X $_module_name/frontend.GitCommit=$_git_commit \
		-X $_module_name/frontend.GitTag=$_git_tag \
		-X $_module_name/frontend.GoVersion=$_go_version \
		"
	echo "build client start: $(date)"
	go build -ldflags="$ldflags" -o "$builddir/bin/apsh" ./frontend/client
	echo "build client end  : $(date)"
	echo "output client to  : $builddir/bin/apsh"
}

check() {
	go test ./encrypt/...
	go test ./frontend/
	APRILSH_APSHD_PATH="$builddir/bin/apshd" go test ./frontend/server
	go test ./frontend/client
	go test ./network/...
	go test ./statesync/...
	go test ./terminal/...
	go test ./util/...
}

package() {
	install -Dm755 "$builddir/bin/apshd" "$pkgdir/usr/bin/apshd"
	install -Dm755 "$builddir/bin/apsh"  "$pkgdir/usr/bin/apsh"
	install -Dm644 "$srcdir/apshd.initd" "$pkgdir/etc/init.d/apshd"
	install -Dm644 "$srcdir/apshd.logrotate" "$pkgdir/etc/logrotate.d/apshd"
}

client() {
	replaces="$pkgname"
	pkgdesc="$pkgname client"
	depends="musl-locales ncurses ncurses-terminfo"
	amove usr/bin/apsh
}

server() {
	replaces="$pkgname"
	pkgdesc="$pkgname server"
	depends="musl-locales utmps ncurses ncurses-terminfo wezterm-extra-terminfo openssh-server"
	amove usr/bin/apshd
}

sha512sums="
6a04d17f3f375a5b73503e794e799300e5d7ec277dbe36f7af751ddaca37544006adcb7c53bc7e6a33b6c4364ed846a996789fe6dc94aacd7583bc7a6b0f3464  aprilsh-0.6.14.tar.gz
3e865e0ece136649ad681bfd0b839e46f8adaf2bb76b989b45d1a7722fe9d1bbdf07842a3bd8ae387eadfc5b876f95f15b924c269154b38fc1e860a81016e9c2  apshd.initd
"
